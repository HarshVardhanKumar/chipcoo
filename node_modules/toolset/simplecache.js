var _ 				= require('underscore');
var file 			= require('./file.js').main;

function simpleCache(TTL) {
	this.TTL = TTL;
	
	this.files = {};
	
	this.cache = {};
	
	this.daemon();	// Remove the expired data
}
simpleCache.prototype.daemon = function() {
	var scope = this;
	clearInterval(this.interval);
	if (this.TTL) {
		setInterval(function() {
			var i;
			for (i in scope.cache) {
				if (scope.cache[i].expires <= new Date().getTime()) {
					delete scope.cache[i];
				}
			}
		}, this.TTL);
	}
}
simpleCache.prototype.get = function(id) {
	var scope = this;
	if (this.cache[id]) {
		return this.cache[id].data;
	} else {
		return false;
	}
}
simpleCache.prototype.set = function(id, data) {
	this.cache[id] = {
		data:		data,
		expires:	new Date().getTime()+this.TTL,
	}
	return data;
}
simpleCache.prototype.remove = function(id) {
	delete this.cache[id];
	return true;
}


// Slower methods!
simpleCache.prototype.getByValue = function(value) {
	var i;
	for (i in this.cache) {
		if (this.cache[i].data == value) {
			return i;
		}
	}
	return false;
}
simpleCache.prototype.removeByValue = function(id) {
	var i;
	for (i in this.cache) {
		if (this.cache[i].data == value) {
			delete this.cache[i];
			return true;
		}
	}
	return false;
}

exports.main = simpleCache;